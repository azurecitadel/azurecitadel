name: Static Web App (Icy Island)

env:
  hostname: icy-island-077f0c303
  domain: westeurope.4.azurestaticapps.net

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  check_source_repo:
    runs-on: ubuntu-latest
    name: Check Source Repo
    outputs:
      source_repo: ${{ steps.step1.outputs.source_repo }}
    steps:
      - id: step1
        run: |
          if [ $GITHUB_EVENT_NAME == 'push' ]
          then
            SOURCE_REPO="$(jq -r .repository.full_name ${GITHUB_EVENT_PATH})"
          else
            SOURCE_REPO="$(jq -r .pull_request.head.repo.full_name ${GITHUB_EVENT_PATH})"
          fi
          echo "source_repo=$SOURCE_REPO" >> $GITHUB_OUTPUT

  build_and_deploy_job:
    needs: check_source_repo
    if: needs.check_source_repo.outputs.source_repo == 'azurecitadel/azurecitadel' && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed'))
    runs-on: ubuntu-latest
    name: Build Job
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Setup NodeJS 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      # - name: Install OIDC client from core package
      #   run: |
      #     npm install @actions/core @actions/http-client
      - name: Set staging environment base URL
        if: (github.event_name == 'pull_request' && github.event.action != 'closed')
        run: |
          echo "baseURL = \"https://${{ env.hostname }}-${{ github.event.number }}.${{ env.domain }}\"" > ./config/production/config.toml
      - name: Set production environment base URL
        if: github.event_name == 'push'
        run:
          echo "baseURL = \"https://www.azurecitadel.com/\"" > ./config/production/config.toml
      - name: Setup NodeJS 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.90.1'
          extended: true
      - name: Build
        run: hugo --minify
      # - name: Get Id Token
      #   uses: actions/github-script@v7
      #   id: idtoken
      #   with:
      #     script: |
      #       const coredemo = require('@actions/core')
      #       return await coredemo.getIDToken()
      #     result-encoding: string
      - name: Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ICY_ISLAND_077F0C303 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "public"
          api_location: "api"
          skip_app_build: true
          # github_id_token: $\{{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          app_location: "public"
          api_location: "api"
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ICY_ISLAND_077F0C303 }}
          action: "close"
